// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiUpin.Infrastructure.Persistence;

namespace SiUpin.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(SiUpinDBContext))]
    partial class SiUpinDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SiUpin.Domain.Entities.AsalBantuan", b =>
                {
                    b.Property<string>("AsalBantuanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.HasKey("AsalBantuanID");

                    b.HasIndex("AsalBantuanID");

                    b.ToTable("asalbantuans");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Berita", b =>
                {
                    b.Property<string>("BeritaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("id_berita")
                        .HasColumnType("text");

                    b.HasKey("BeritaID");

                    b.HasIndex("BeritaID");

                    b.ToTable("beritas");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.File", b =>
                {
                    b.Property<string>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EntityID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EntityType")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UphID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UphProdukID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserID")
                        .HasColumnType("varchar(50)");

                    b.HasKey("FileID");

                    b.HasIndex("EntityID");

                    b.HasIndex("FileID");

                    b.HasIndex("UphID");

                    b.HasIndex("UphProdukID");

                    b.HasIndex("UserID");

                    b.ToTable("files");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.JenisKomoditi", b =>
                {
                    b.Property<string>("JenisKomoditiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_komoditi")
                        .HasColumnType("varchar(50)");

                    b.HasKey("JenisKomoditiID");

                    b.HasIndex("JenisKomoditiID");

                    b.ToTable("jeniskomoditis");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.JenisTernak", b =>
                {
                    b.Property<string>("JenisTernakID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_ternak")
                        .HasColumnType("varchar(50)");

                    b.HasKey("JenisTernakID");

                    b.HasIndex("JenisTernakID");

                    b.ToTable("jenisternaks");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Kecamatan", b =>
                {
                    b.Property<string>("KecamatanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_kecamatan")
                        .HasColumnType("varchar(50)");

                    b.HasKey("KecamatanID");

                    b.HasIndex("KecamatanID");

                    b.HasIndex("KotaID");

                    b.ToTable("kecamatans");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Kelurahan", b =>
                {
                    b.Property<string>("KelurahanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_kelurahan")
                        .HasColumnType("varchar(50)");

                    b.HasKey("KelurahanID");

                    b.HasIndex("KecamatanID");

                    b.HasIndex("KelurahanID");

                    b.ToTable("kelurahans");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Kota", b =>
                {
                    b.Property<string>("KotaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProvinsiID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_kota")
                        .HasColumnType("varchar(50)");

                    b.HasKey("KotaID");

                    b.HasIndex("KotaID");

                    b.HasIndex("ProvinsiID");

                    b.ToTable("kotas");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.ParameterAspek", b =>
                {
                    b.Property<string>("ParameterAspekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_aspek")
                        .HasColumnType("text");

                    b.HasKey("ParameterAspekID");

                    b.HasIndex("ParameterAspekID");

                    b.ToTable("parameteraspeks");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.ParameterIndikator", b =>
                {
                    b.Property<string>("ParameterIndikatorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ParameterKriteriaID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_indikator")
                        .HasColumnType("text");

                    b.HasKey("ParameterIndikatorID");

                    b.HasIndex("ParameterIndikatorID");

                    b.HasIndex("ParameterKriteriaID");

                    b.ToTable("parameterindikators");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.ParameterJawaban", b =>
                {
                    b.Property<string>("ParameterJawabanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ParameterIndikatorID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Skor")
                        .HasColumnType("char(5)");

                    b.HasKey("ParameterJawabanID");

                    b.HasIndex("ParameterIndikatorID");

                    b.HasIndex("ParameterJawabanID");

                    b.ToTable("parameterjawabans");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.ParameterKriteria", b =>
                {
                    b.Property<string>("ParameterKriteriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ParameterAspekID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_kriteria")
                        .HasColumnType("text");

                    b.HasKey("ParameterKriteriaID");

                    b.HasIndex("ParameterAspekID");

                    b.HasIndex("ParameterKriteriaID");

                    b.ToTable("parameterkriterias");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Pesan", b =>
                {
                    b.Property<string>("PesanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.HasKey("PesanID");

                    b.HasIndex("PesanID");

                    b.ToTable("pesans");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.ProdukOlahan", b =>
                {
                    b.Property<string>("ProdukOlahanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("JenisKomoditiID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("id_olahan")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProdukOlahanID");

                    b.HasIndex("JenisKomoditiID");

                    b.HasIndex("ProdukOlahanID");

                    b.ToTable("produkolahans");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Provinsi", b =>
                {
                    b.Property<string>("ProvinsiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_provinsi")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProvinsiID");

                    b.HasIndex("ProvinsiID");

                    b.ToTable("provinsis");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Role", b =>
                {
                    b.Property<string>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleID");

                    b.HasIndex("RoleID");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Satuan", b =>
                {
                    b.Property<string>("SatuanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.HasKey("SatuanID");

                    b.HasIndex("SatuanID");

                    b.ToTable("satuans");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Uph", b =>
                {
                    b.Property<string>("UphID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Alamat")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Handphone")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KecamatanID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ketua")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaID")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ParameterAdministrasiID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParameterBadanHukumID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParameterBentukLembagaID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParameterStatusUphID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProvinsiID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TahunBerdiri")
                        .HasColumnType("char(5)");

                    b.Property<string>("id_uph")
                        .HasColumnType("text");

                    b.HasKey("UphID");

                    b.HasIndex("KecamatanID");

                    b.HasIndex("KelurahanID");

                    b.HasIndex("KotaID");

                    b.HasIndex("ParameterAdministrasiID");

                    b.HasIndex("ParameterBadanHukumID");

                    b.HasIndex("ParameterBentukLembagaID");

                    b.HasIndex("ParameterStatusUphID");

                    b.HasIndex("ProvinsiID");

                    b.HasIndex("UphID");

                    b.ToTable("uphs");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphBahanBaku", b =>
                {
                    b.Property<string>("UphBahanBakuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AsalBahanBaku")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("JenisKomoditiID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("JenisTernakID")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("Nilai")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SatuanID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TotalKebutuhan")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UphID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_bahan_baku")
                        .HasColumnType("text");

                    b.Property<string>("id_uph")
                        .HasColumnType("text");

                    b.HasKey("UphBahanBakuID");

                    b.HasIndex("JenisKomoditiID");

                    b.HasIndex("JenisTernakID");

                    b.HasIndex("SatuanID");

                    b.HasIndex("UphBahanBakuID");

                    b.HasIndex("UphID");

                    b.ToTable("uphbahanbakus");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphGmp", b =>
                {
                    b.Property<string>("UphGmpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("UphID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_gmp")
                        .HasColumnType("text");

                    b.Property<string>("id_uph")
                        .HasColumnType("text");

                    b.Property<string>("jml_gmp")
                        .HasColumnType("text");

                    b.Property<string>("nama_gmp")
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .HasColumnType("text");

                    b.HasKey("UphGmpID");

                    b.HasIndex("UphGmpID");

                    b.HasIndex("UphID");

                    b.ToTable("uphgmps");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphMitra", b =>
                {
                    b.Property<string>("UphMitraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("UphID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("akhir_periode")
                        .HasColumnType("text");

                    b.Property<string>("alamat")
                        .HasColumnType("text");

                    b.Property<string>("awal_periode")
                        .HasColumnType("text");

                    b.Property<string>("bermitra")
                        .HasColumnType("text");

                    b.Property<string>("detail_bahan")
                        .HasColumnType("text");

                    b.Property<string>("detail_fasilitasi")
                        .HasColumnType("text");

                    b.Property<string>("detail_kopetensi")
                        .HasColumnType("text");

                    b.Property<string>("detail_mitra")
                        .HasColumnType("text");

                    b.Property<string>("detail_promosi")
                        .HasColumnType("text");

                    b.Property<string>("detail_sarana")
                        .HasColumnType("text");

                    b.Property<string>("id_mitra")
                        .HasColumnType("text");

                    b.Property<string>("id_uph")
                        .HasColumnType("text");

                    b.Property<string>("jenis_mitra")
                        .HasColumnType("text");

                    b.Property<string>("jenis_usaha")
                        .HasColumnType("text");

                    b.Property<string>("lain_kopetensi")
                        .HasColumnType("text");

                    b.Property<string>("lembaga")
                        .HasColumnType("text");

                    b.Property<string>("lembaga_lain")
                        .HasColumnType("text");

                    b.Property<string>("manajemen_limbah")
                        .HasColumnType("text");

                    b.Property<string>("nama_perusahaan")
                        .HasColumnType("text");

                    b.Property<string>("nilai_lembaga")
                        .HasColumnType("text");

                    b.Property<string>("nilai_mitra")
                        .HasColumnType("text");

                    b.Property<string>("nilai_promosi")
                        .HasColumnType("text");

                    b.Property<string>("nilai_sarana")
                        .HasColumnType("text");

                    b.Property<string>("no_hp")
                        .HasColumnType("text");

                    b.Property<string>("penanggungjawab")
                        .HasColumnType("text");

                    b.Property<string>("perjanjian")
                        .HasColumnType("text");

                    b.Property<string>("sasaran")
                        .HasColumnType("text");

                    b.Property<string>("satuan_bahan")
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.Property<string>("upload_doc")
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .HasColumnType("text");

                    b.HasKey("UphMitraID");

                    b.HasIndex("UphID");

                    b.HasIndex("UphMitraID");

                    b.ToTable("uphmitras");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphPasar", b =>
                {
                    b.Property<string>("UphPasarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("UphID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_pasar")
                        .HasColumnType("text");

                    b.Property<string>("id_uph")
                        .HasColumnType("text");

                    b.Property<string>("jangkauan")
                        .HasColumnType("text");

                    b.Property<string>("jml_penjualan")
                        .HasColumnType("text");

                    b.Property<string>("lain")
                        .HasColumnType("text");

                    b.Property<string>("mekanisme")
                        .HasColumnType("text");

                    b.Property<string>("nama_uph")
                        .HasColumnType("text");

                    b.Property<string>("nilai_mekanisme")
                        .HasColumnType("text");

                    b.Property<string>("omset")
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .HasColumnType("text");

                    b.HasKey("UphPasarID");

                    b.HasIndex("UphID");

                    b.HasIndex("UphPasarID");

                    b.ToTable("uphpasars");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphProduk", b =>
                {
                    b.Property<string>("UphProdukID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Berat")
                        .HasColumnType("int(5)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Harga")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("JenisTernakID")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProdukOlahanID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SatuanID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UphID")
                        .HasColumnType("varchar(50)");

                    b.HasKey("UphProdukID");

                    b.HasIndex("JenisTernakID");

                    b.HasIndex("ProdukOlahanID");

                    b.HasIndex("SatuanID");

                    b.HasIndex("UphID");

                    b.HasIndex("UphProdukID");

                    b.ToTable("uphproduks");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphProduksi", b =>
                {
                    b.Property<string>("UphProduksiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("UphID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("bahan_baku")
                        .HasColumnType("text");

                    b.Property<string>("gmp")
                        .HasColumnType("text");

                    b.Property<string>("id_produksi")
                        .HasColumnType("text");

                    b.Property<string>("id_uph")
                        .HasColumnType("text");

                    b.Property<string>("izin_edar")
                        .HasColumnType("text");

                    b.Property<string>("jml_edar")
                        .HasColumnType("text");

                    b.Property<string>("jml_gmp")
                        .HasColumnType("text");

                    b.Property<string>("jml_hari_produksi")
                        .HasColumnType("text");

                    b.Property<string>("jml_produksi")
                        .HasColumnType("text");

                    b.Property<string>("jml_sertifikat")
                        .HasColumnType("text");

                    b.Property<string>("nama_uph")
                        .HasColumnType("text");

                    b.Property<string>("satuan")
                        .HasColumnType("text");

                    b.Property<string>("sertifikat")
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .HasColumnType("text");

                    b.HasKey("UphProduksiID");

                    b.HasIndex("UphID");

                    b.HasIndex("UphProduksiID");

                    b.ToTable("uphproduksis");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphSarana", b =>
                {
                    b.Property<string>("UphSaranaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("UphID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("alasan")
                        .HasColumnType("text");

                    b.Property<string>("asal_bantuan")
                        .HasColumnType("text");

                    b.Property<string>("id_sarana")
                        .HasColumnType("text");

                    b.Property<string>("id_uph")
                        .HasColumnType("text");

                    b.Property<string>("jenis_mesin")
                        .HasColumnType("text");

                    b.Property<string>("kapasitas_terpakai")
                        .HasColumnType("text");

                    b.Property<string>("kapasitas_terpasang")
                        .HasColumnType("text");

                    b.Property<string>("lain")
                        .HasColumnType("text");

                    b.Property<string>("lain_alasan")
                        .HasColumnType("text");

                    b.Property<string>("nama_alat")
                        .HasColumnType("text");

                    b.Property<string>("nama_uph")
                        .HasColumnType("text");

                    b.Property<string>("satuan")
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.Property<string>("tahun")
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .HasColumnType("text");

                    b.HasKey("UphSaranaID");

                    b.HasIndex("UphID");

                    b.HasIndex("UphSaranaID");

                    b.ToTable("uphsaranas");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphSdm", b =>
                {
                    b.Property<string>("UphSdmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("UphID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("id_sdm")
                        .HasColumnType("text");

                    b.Property<string>("id_uph")
                        .HasColumnType("text");

                    b.Property<string>("jml_modal")
                        .HasColumnType("text");

                    b.Property<string>("jml_sdm")
                        .HasColumnType("text");

                    b.Property<string>("lokasi")
                        .HasColumnType("text");

                    b.Property<string>("nama_pelatihan")
                        .HasColumnType("text");

                    b.Property<string>("nama_uph")
                        .HasColumnType("text");

                    b.Property<string>("penyelenggara")
                        .HasColumnType("text");

                    b.Property<string>("sop")
                        .HasColumnType("text");

                    b.Property<string>("struktur_modal")
                        .HasColumnType("text");

                    b.Property<string>("sumber_modal")
                        .HasColumnType("text");

                    b.Property<string>("tahun")
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .HasColumnType("text");

                    b.HasKey("UphSdmID");

                    b.HasIndex("UphID");

                    b.HasIndex("UphSdmID");

                    b.ToTable("uphsdms");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.User", b =>
                {
                    b.Property<string>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Alamat")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fullname")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Instansi")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Jabatan")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("KecamatanID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KelurahanID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KotaID")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp");

                    b.Property<string>("NIP")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PictureURL")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("ProvinsiID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telepon")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("id")
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("KecamatanID");

                    b.HasIndex("KelurahanID");

                    b.HasIndex("KotaID");

                    b.HasIndex("ProvinsiID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.File", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.Uph", null)
                        .WithMany("Files")
                        .HasForeignKey("UphID");

                    b.HasOne("SiUpin.Domain.Entities.UphProduk", null)
                        .WithMany("Files")
                        .HasForeignKey("UphProdukID");

                    b.HasOne("SiUpin.Domain.Entities.User", null)
                        .WithMany("Files")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Kecamatan", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.Kota", "Kota")
                        .WithMany("Kecamatans")
                        .HasForeignKey("KotaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Kelurahan", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.Kecamatan", "Kecamatan")
                        .WithMany("Kelurahans")
                        .HasForeignKey("KecamatanID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Kota", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.Provinsi", "Provinsi")
                        .WithMany("Kotas")
                        .HasForeignKey("ProvinsiID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.ParameterIndikator", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.ParameterKriteria", "ParameterKriteria")
                        .WithMany("ParameterIndikators")
                        .HasForeignKey("ParameterKriteriaID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.ParameterJawaban", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.ParameterIndikator", "ParameterIndikator")
                        .WithMany("ParameterJawabans")
                        .HasForeignKey("ParameterIndikatorID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.ParameterKriteria", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.ParameterAspek", "ParameterAspek")
                        .WithMany("ParameterKriterias")
                        .HasForeignKey("ParameterAspekID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.ProdukOlahan", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.JenisKomoditi", "JenisKomoditi")
                        .WithMany("ProdukOlahans")
                        .HasForeignKey("JenisKomoditiID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.Uph", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.Kecamatan", "Kecamatan")
                        .WithMany("Uphs")
                        .HasForeignKey("KecamatanID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.Kelurahan", "Kelurahan")
                        .WithMany("Uphs")
                        .HasForeignKey("KelurahanID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.Kota", "Kota")
                        .WithMany("Uphs")
                        .HasForeignKey("KotaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.ParameterJawaban", "ParameterAdministrasi")
                        .WithMany("UphParameterAdministrasis")
                        .HasForeignKey("ParameterAdministrasiID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.ParameterJawaban", "ParameterBadanHukum")
                        .WithMany("UphParameterBadanHukums")
                        .HasForeignKey("ParameterBadanHukumID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.ParameterJawaban", "ParameterBentukLembaga")
                        .WithMany("UphParameterBentukLembagas")
                        .HasForeignKey("ParameterBentukLembagaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.ParameterJawaban", "ParameterStatusUph")
                        .WithMany("UphParameterStatusUphs")
                        .HasForeignKey("ParameterStatusUphID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.Provinsi", "Provinsi")
                        .WithMany("Uphs")
                        .HasForeignKey("ProvinsiID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphBahanBaku", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.JenisKomoditi", "JenisKomoditi")
                        .WithMany("UphBahanBakus")
                        .HasForeignKey("JenisKomoditiID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.JenisTernak", "JenisTernak")
                        .WithMany("UphBahanBakus")
                        .HasForeignKey("JenisTernakID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.Satuan", "Satuan")
                        .WithMany("UphBahanBakus")
                        .HasForeignKey("SatuanID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.Uph", "Uph")
                        .WithMany("UphBahanBakus")
                        .HasForeignKey("UphID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.UphProduk", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.JenisTernak", "JenisTernak")
                        .WithMany("UphProduks")
                        .HasForeignKey("JenisTernakID");

                    b.HasOne("SiUpin.Domain.Entities.ProdukOlahan", "ProdukOlahan")
                        .WithMany("UphProduks")
                        .HasForeignKey("ProdukOlahanID");

                    b.HasOne("SiUpin.Domain.Entities.Satuan", "Satuan")
                        .WithMany("UphProduks")
                        .HasForeignKey("SatuanID");

                    b.HasOne("SiUpin.Domain.Entities.Uph", "Uph")
                        .WithMany("UphProduks")
                        .HasForeignKey("UphID");
                });

            modelBuilder.Entity("SiUpin.Domain.Entities.User", b =>
                {
                    b.HasOne("SiUpin.Domain.Entities.Kecamatan", "Kecamatan")
                        .WithMany("Users")
                        .HasForeignKey("KecamatanID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.Kelurahan", "Kelurahan")
                        .WithMany("Users")
                        .HasForeignKey("KelurahanID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.Kota", "Kota")
                        .WithMany("Users")
                        .HasForeignKey("KotaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.Provinsi", "Provinsi")
                        .WithMany("Users")
                        .HasForeignKey("ProvinsiID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SiUpin.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
