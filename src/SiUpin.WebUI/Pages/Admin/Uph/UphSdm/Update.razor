@inject HttpClient Http
@inject IMatToaster Toaster

@if (IsLoading)
{
    <MatDialog @bind-IsOpen="IsLoading" CanBeClosed="false">
        <MatDialog>Please Wait..</MatDialog>
        <MatDialogContent>
            <MatProgressBar Indeterminate="true" Closed="!IsLoading"></MatProgressBar>
        </MatDialogContent>
    </MatDialog>
}
else
{
    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                <MatButton Icon="@MatIconNames.Keyboard_arrow_left" OnClick="CancelClick">Kembali</MatButton>
            </div>

            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12 mat-elevation-z3 p-3">
                <MatH6>Sumber Daya</MatH6>
                <EditForm EditContext="_editContext">
                    <DataAnnotationsValidator />

                    <div class="mat-layout-grid-inner mt-0">
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                            @if (UphIDandNames.Count > 0)
                            {
                                <MatAutocompleteList FullWidth="true" Items="UphIDandNames.Select(x => x.Name).ToList()"
                                                     TItem="string"
                                                     Label="Pilih UPH"
                                                     OnOpenedChanged="@((stats) =>
                                                                        { if (stats) { IsHidden = true; } else { IsHidden = false; } })"
                                                     @bind-Value="SelectedUph" />
                                <ValidationMessage For="@(() => Model.UphID)" />
                            }
                        </div>
                        @if (!IsHidden)
                        {
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                                <MatTextField @bind-Value="Model.jml_sdm" Label="Jumlah SDM" Type="number" Required="true" FullWidth="true" />
                                <MatCaption Class="mt-1">
                                    <ValidationMessage For="@(() => Model.jml_sdm)" />
                                </MatCaption>
                            </div>
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                                <MatSelect @bind-Value="SelectStrukturModals" Label="Struktur Permodalan" FullWidth="true">
                                    <MatOption TValue="string" Value="@(null)"></MatOption>
                                    @if (StrukturModals.Count() > 0)
                                            {
                                                foreach (var item in StrukturModals)
                                                {
                                            <MatOption TValue="string" Value="@(item)">@item</MatOption>
                                                }
                                            }
                                </MatSelect>
                            </div>
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                                @if (SumberModals.Count() > 0)
                                {
                                    <MatBody1>SumberModal</MatBody1>

                                    for (int i = 0; i < SumberModals.Count(); i++)
                                    {
                                        int index = i;

                                        <MatCheckbox TValue="bool"
                                                     Value="SumberModals[index].IsChoosen"
                                                     ValueExpression="@( () => SumberModals[index].IsChoosen )"
                                                     ValueChanged="@((e) => { HandleSumberModal(e, index); })" Label="@SumberModals[index].Name" />
                                        <br />
                                    }
                                }
                            </div>
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                                @if (SOPs.Count() > 0)
                                {
                                    <MatBody1>SOP</MatBody1>

                                    for (int i = 0; i < SOPs.Count(); i++)
                                    {
                                        int index = i;

                                        <MatCheckbox TValue="bool"
                                                     Value="SOPs[index].IsChoosen"
                                                     ValueExpression="@( () => SOPs[index].IsChoosen )"
                                                     ValueChanged="@((e) => { HandleSOP(e, index); })" Label="@SOPs[index].Name" />
                                        <br />
                                    }
                                }
                            </div>
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                                <MatTextField @bind-Value="Model.nama_pelatihan" Label="Nama Pelatihan" Required="true" FullWidth="true" />
                                <MatCaption Class="mt-1">
                                    <ValidationMessage For="@(() => Model.nama_pelatihan)" />
                                </MatCaption>
                            </div>
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                                <MatTextField @bind-Value="Model.penyelenggara" Label="Penyelenggara" Required="true" FullWidth="true" />
                                <MatCaption Class="mt-1">
                                    <ValidationMessage For="@(() => Model.penyelenggara)" />
                                </MatCaption>
                            </div>
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                                <MatSelect @bind-Value="SelectProvinsis" Label="Lokasi" FullWidth="true">
                                    <MatOption TValue="string" Value="@(null)"></MatOption>
                                    @if (Provinsis.Count() > 0)
                                            {
                                                foreach (var item in Provinsis)
                                                {
                                            <MatOption TValue="string" Value="@(item)">@item</MatOption>
                                                }
                                            }
                                </MatSelect>
                            </div>
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                                <MatSelect @bind-Value="SelectTahuns" Label="Tahun" FullWidth="true">
                                    <MatOption TValue="string" Value="@(null)"></MatOption>
                                    @if (Tahuns.Count() > 0)
                                            {
                                                foreach (var item in Tahuns)
                                                {
                                            <MatOption TValue="string" Value="@(item)">@item</MatOption>
                                                }
                                            }
                                </MatSelect>
                            </div>
                        }
                    </div>
                </EditForm>
            </div>
            @if (!IsHidden)
            {
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                    <MatButton OnClick="CancelClick">Cancel</MatButton>
                    <MatButton Raised="true" OnClick="HandleSubmit">
                        Submit &nbsp;
                        @if (IsLoadingCircle)
                        {
                            <i class="fas fa-spinner fa-spin"></i>
                        }
                    </MatButton>
                </div>
            }
        </div>
    </div>
}
