@layout AnonymousLayout

@page "/"

@using Syncfusion.Blazor.Maps

@inject IJSRuntime JsRuntime
@inject NavigationManager Navigation

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-middle mat-layout-grid-cell-span-12">

            <MatHidden BreakPoint="@MatBreakpoint.XS" Direction="@MatHiddenDirection.Down">
                <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                    <ol class="carousel-indicators">
                        <li data-target="#carouselExampleIndicators" data-slide-to="0" class="bg-dark active"></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="1" class="bg-dark">></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="2" class="bg-dark">></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="3" class="bg-dark">></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="4" class="bg-dark">></li>
                    </ol>
                    <div class="mat-elevation-z3">
                        <div class="carousel-inner">
                            <div class="carousel-item active">
                                <img class="d-block w-100" src="images/daging.jpg" alt="UPH">
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="images/susu.jpg" alt="Cluster">
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="images/telur.jpg" alt="Informasi">
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="images/sapi.jpg" alt="Informasi">
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="images/unggas.png" alt="Informasi">
                            </div>
                        </div>
                    </div>

                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                        <MatFAB Icon="@MatIconNames.Keyboard_arrow_left"></MatFAB>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                        <MatFAB Icon="@MatIconNames.Keyboard_arrow_right"></MatFAB>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </MatHidden>

            <MatHidden BreakPoint="@MatBreakpoint.SM" Direction="@MatHiddenDirection.Up">
                <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                    <ol class="carousel-indicators">
                        <li data-target="#carouselExampleIndicators" data-slide-to="0" class="bg-dark active"></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="1" class="bg-dark">></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="2" class="bg-dark">></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="3" class="bg-dark">></li>
                        <li data-target="#carouselExampleIndicators" data-slide-to="4" class="bg-dark">></li>
                    </ol>
                    <div class="mat-elevation-z3">
                        <div class="carousel-inner">
                            <div class="carousel-item active">
                                <img class="d-block w-100" src="images/daging.jpg" alt="UPH">
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="images/susu.jpg" alt="Cluster">
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="images/telur.jpg" alt="Informasi">
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="images/sapi.jpg" alt="Informasi">
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="images/unggas.png" alt="Informasi">
                            </div>
                        </div>
                    </div>

                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                        <MatFAB Icon="@MatIconNames.Keyboard_arrow_left"></MatFAB>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                        <MatFAB Icon="@MatIconNames.Keyboard_arrow_right"></MatFAB>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </MatHidden>
        </div>

        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-middle mat-layout-grid-cell-span-2">
            <MatCard class="has-mat-card" @onclick='() => { Navigation.NavigateTo("/katalog"); }'>
                <MatCardContent>
                    <MatCardMedia Wide="true" ImageUrl="images/categories/web_daging.png" Style="background-size: 110px 100px;"></MatCardMedia>
                    <div class="has-mat-card-content">
                        <MatSubtitle2 class="has-mat-card-clean-margin text-center">
                            Daging
                        </MatSubtitle2>
                    </div>
                </MatCardContent>
            </MatCard>
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-middle mat-layout-grid-cell-span-2">
            <MatCard class="has-mat-card" @onclick='() => { Navigation.NavigateTo("/katalog"); }'>
                <MatCardContent>
                    <MatCardMedia Wide="true" ImageUrl="images/categories/web_limbah.png" Style="background-size: 110px 100px;"></MatCardMedia>
                    <div class="has-mat-card-content">
                        <MatSubtitle2 class="has-mat-card-clean-margin text-center">
                            Limbah
                        </MatSubtitle2>
                    </div>
                </MatCardContent>
            </MatCard>
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-middle mat-layout-grid-cell-span-2">
            <MatCard class="has-mat-card" @onclick='() => { Navigation.NavigateTo("/katalog"); }'>
                <MatCardContent>
                    <MatCardMedia Wide="true" ImageUrl="images/categories/web_susu.png" Style="background-size: 110px 100px;"></MatCardMedia>
                    <div class="has-mat-card-content">
                        <MatSubtitle2 class="has-mat-card-clean-margin text-center">
                            Susu
                        </MatSubtitle2>
                    </div>
                </MatCardContent>
            </MatCard>
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-middle mat-layout-grid-cell-span-2">
            <MatCard class="has-mat-card" @onclick='() => { Navigation.NavigateTo("/katalog"); }'>
                <MatCardContent>
                    <MatCardMedia Wide="true" ImageUrl="images/categories/web_ternak.png" Style="background-size: 100px 100px;"></MatCardMedia>
                    <div class="has-mat-card-content">
                        <MatSubtitle2 class="has-mat-card-clean-margin text-center">
                            Ternak
                        </MatSubtitle2>
                    </div>
                </MatCardContent>
            </MatCard>
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-middle mat-layout-grid-cell-span-2">
            <MatCard class="has-mat-card" @onclick='() => { Navigation.NavigateTo("/"); }'>
                <MatCardContent>
                    <MatCardMedia Wide="true" ImageUrl="images/categories/web_unggas.png" Style="background-size: 100px 100px;"></MatCardMedia>
                    <div class="has-mat-card-content">
                        <MatSubtitle2 class="has-mat-card-clean-margin text-center">
                            Unggas
                        </MatSubtitle2>
                    </div>
                </MatCardContent>
            </MatCard>
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-middle mat-layout-grid-cell-span-2">
            <MatCard class="has-mat-card" @onclick='() => { Navigation.NavigateTo("/katalog"); }'>
                <MatCardContent>
                    <MatCardMedia Wide="true" ImageUrl="images/produk_olahan.png"></MatCardMedia>
                    <div class="has-mat-card-content">
                        <MatSubtitle2 class="has-mat-card-clean-margin text-center">
                            Katalog
                        </MatSubtitle2>
                    </div>
                </MatCardContent>
            </MatCard>
        </div>

        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-middle mat-layout-grid-cell-span-12">
            <div class="mat-elevation-z3 mt-3">
                <div class="mat-layout-grid">
                    <div class="mat-layout-grid-inner">
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                            <div class="control-section">
                                <SfMaps Format="N0" UseGroupingSeparator="true">
                                    <MapsZoomSettings Enable="true" HorizontalAlignment="Alignment.Near" ToolBarOrientation="Orientation.Vertical" />
                                    <MapsTitleSettings Text="Peta Data Persebaran UPH">
                                        <MapsTitleTextStyle Size="16px" />
                                    </MapsTitleSettings>
                                    <MapsLegendSettings Visible="true" Position="LegendPosition.Bottom" Height="10" Width="80%" Mode="LegendMode.Interactive">
                                        <MapsLegendTitle Text="@LegendText" />
                                        <MapsLegendTitleStyle Size="18px" />
                                    </MapsLegendSettings>
                                    <MapsLayers>
                                        <MapsLayer ShapeData='new {dataOptions = "data/maps/indonesia.json"}' ShapeDataPath="State" ShapePropertyPath="@ShapePropertyPath" DataSource="@ColorMappingData">
                                            <MapsShapeSettings Fill="#E5E5E5" ColorValuePath="@ColorValuePath">
                                                <MapsShapeBorder Width="0.2" Color="#000000" />
                                                <MapsShapeColorMappings>
                                                    <MapsShapeColorMapping From="@ColorMappingFromOne" MinOpacity="@MinOpacity" MaxOpacity="MaxOpacity" To="@ColorMappingToOne" Color="@ColorMappingColorOne" Label="@ColorMappingLabelOne" Value="@ColorMappingValueOne" />
                                                    <MapsShapeColorMapping From="@ColorMappingFromTwo" To="@ColorMappingToTwo" Color="@ColorMappingColorTwo" Label="@ColorMappingLabelTwo" Value="@ColorMappingValueTwo" />
                                                    <MapsShapeColorMapping From="@ColorMappingFromThree" To="@ColorMappingToThree" Color="@ColorMappingColorThree" Label="@ColorMappingLabelThree" Value="@ColorMappingValueThree" />
                                                    <MapsShapeColorMapping From="@ColorMappingFromFour" To="@ColorMappingToFour" Color="@ColorMappingColorFour" Label="@ColorMappingLabelFour" Value="@ColorMappingValueFour" />
                                                    <MapsShapeColorMapping From="@ColorMappingFromFive" To="@ColorMappingToFive" Color="@ColorMappingColorFive" Label="@ColorMappingLabelFive" Value="@ColorMappingValueFive" />
                                                    <MapsShapeColorMapping From="@ColorMappingFromSix" To="@ColorMappingToSix" Color="@ColorMappingColorSix" Label="@ColorMappingLabelSix" Value="@ColorMappingValueSix" />
                                                </MapsShapeColorMappings>
                                            </MapsShapeSettings>
                                            <MapsLayerTooltipSettings Visible="true" ValuePath="State" Format=" <b> ${State}</b> <br> Total UPH : ${Inches}" />
                                        </MapsLayer>
                                    </MapsLayers>
                                </SfMaps>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@code
{
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeAsync<object>("initializeCarousel");
            firstRender = false;
        }
    }

    // maps
    public string ColorMappingTypeValue = "Range";
    public string ShapePropertyPath = "name";
    public string LegendText = "Total UPH";
    public string MinDisplay = "none";
    public double MinOpacity = 0;
    public double MaxOpacity = 0;
    public double MinRange = 0.5;
    public string Display = "none";
    public double MaxRange = 1;
    public bool OpacityChecked;

    private void OpacityChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        OpacityChecked = args.Checked;
        if (OpacityChecked == true)
        {
            MinDisplay = "block";
        }
        else
        {
            MinDisplay = "none";
        }
    }

    private void MinRangeChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        MinRange = Convert.ToDouble(args.Value);
        MinOpacity = MinRange;
    }

    private void MaxRangeChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        MaxRange = Convert.ToDouble(args.Value);
        MaxOpacity = MaxRange;
    }

    public class Type
    {
        public string Value { get; set; }
        public string Name { get; set; }
    };

    public List<Type> ColorMappingType = new List<Type> {
        new Type { Value="Range", Name="Range" },
        new Type { Value="Equal", Name="Equal" },
        new Type { Value="Desaturation", Name="Desaturation" }
    };

    public string ColorValuePath = "Inches";
    public double? ColorMappingFromOne = 0.1;
    public double? ColorMappingToOne = 1;
    public string[] ColorMappingColorOne = { "#DEEBAE" };
    public string ColorMappingLabelOne = "0 - 1";
    public string ColorMappingValueOne = null;
    public double? ColorMappingFromTwo = 1;
    public double? ColorMappingToTwo = 2;
    public string[] ColorMappingColorTwo = { "#A4D6AD" };
    public string ColorMappingLabelTwo = "1 - 2";
    public string ColorMappingValueTwo = null;
    public double? ColorMappingFromThree = 2;
    public double? ColorMappingToThree = 3;
    public string[] ColorMappingColorThree = { "#37AFAB" };
    public string ColorMappingLabelThree = "2 - 3";
    public string ColorMappingValueThree = null;
    public double? ColorMappingFromFour = 3;
    public double? ColorMappingToFour = 4;
    public string[] ColorMappingColorFour = { "#547C84" };
    public string ColorMappingLabelFour = "3 - 4";
    public string ColorMappingValueFour = null;
    public double? ColorMappingFromFive = 4;
    public double? ColorMappingToFive = 5;
    public string[] ColorMappingColorFive = { "#CEBF93" };
    public string ColorMappingLabelFive = "4 - 5";
    public string ColorMappingValueFive = null;
    public double? ColorMappingFromSix = 5;
    public double? ColorMappingToSix = 6;
    public string[] ColorMappingColorSix = { "#a69d70" };
    public string ColorMappingLabelSix = "5 - 6";
    public string ColorMappingValueSix = null;
    private void ColorMappingValueTypeChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Type> args)
    {
        ColorMappingTypeValue = args.Value;
        if (ColorMappingTypeValue == "Range")
        {
            MinDisplay = "none";
            Display = "none";
            OpacityChecked = false;
            LegendText = "Inches";
            ColorValuePath = "Inches";
            ColorMappingFromOne = 0.1;
            ColorMappingToOne = 1;
            ColorMappingColorOne = new string[] { "#DEEBAE" };
            ColorMappingLabelOne = "0 - 1";
            ColorMappingValueOne = null;
            ColorMappingFromTwo = 1;
            ColorMappingToTwo = 2;
            ColorMappingColorTwo = new string[] { "#A4D6AD" };
            ColorMappingLabelTwo = "1 - 2";
            ColorMappingValueTwo = null;
            ColorMappingFromThree = 2;
            ColorMappingToThree = 3;
            ColorMappingColorThree = new string[] { "#37AFAB" };
            ColorMappingLabelThree = "2 - 3";
            ColorMappingValueThree = null;
            ColorMappingFromFour = 3;
            ColorMappingToFour = 4;
            ColorMappingColorFour = new string[] { "#547C84" };
            ColorMappingLabelFour = "3 - 4";
            ColorMappingValueFour = null;
            ColorMappingFromFive = 4;
            ColorMappingToFive = 5;
            ColorMappingColorFive = new string[] { "#CEBF93" };
            ColorMappingLabelFive = "4 - 5";
            ColorMappingValueFive = null;
            ColorMappingFromSix = 5;
            ColorMappingToSix = 6;
            ColorMappingColorSix = new string[] { "#a69d70" };
            ColorMappingLabelSix = "5 - 6";
            ColorMappingValueSix = null;
        }
        else if (ColorMappingTypeValue == "Equal")
        {
            MinDisplay = "none";
            Display = "none";
            OpacityChecked = false;
            LegendText = "Category";
            ColorValuePath = "Value";
            ColorMappingFromOne = null;
            ColorMappingToOne = null;
            ColorMappingColorOne = new string[] { "#DEEBAE" };
            ColorMappingLabelOne = null;
            ColorMappingValueOne = "Low";
            ColorMappingFromTwo = null;
            ColorMappingToTwo = null;
            ColorMappingColorTwo = new string[] { "#A4D6AD" };
            ColorMappingLabelTwo = null;
            ColorMappingValueTwo = "Moderate";
            ColorMappingFromThree = null;
            ColorMappingToThree = null;
            ColorMappingColorThree = new string[] { "#37AFAB" };
            ColorMappingLabelThree = null;
            ColorMappingValueThree = "High";
            ColorMappingFromFour = null;
            ColorMappingToFour = null;
            ColorMappingColorFour = null;
            ColorMappingLabelFour = null;
            ColorMappingValueFour = null;
            ColorMappingFromFive = null;
            ColorMappingToFive = null;
            ColorMappingColorFive = null;
            ColorMappingLabelFive = null;
            ColorMappingValueFive = null;
            ColorMappingFromSix = null;
            ColorMappingToSix = null;
            ColorMappingColorSix = null;
            ColorMappingLabelSix = null;
            ColorMappingValueSix = null;
        }
        else
        {
            Display = "block";
            LegendText = "Inches";
            ColorValuePath = "Inches";
            ColorMappingFromOne = 0.1;
            ColorMappingToOne = 6;
            ColorMappingColorOne = new string[] { "#F0D6AD", "#19547B" };
            ColorMappingLabelOne = null;
            ColorMappingValueOne = null;
            ColorMappingFromTwo = null;
            ColorMappingToTwo = null;
            ColorMappingColorTwo = null;
            ColorMappingLabelTwo = null;
            ColorMappingValueTwo = null;
            ColorMappingFromThree = null;
            ColorMappingToThree = null;
            ColorMappingColorThree = null;
            ColorMappingLabelThree = null;
            ColorMappingValueThree = null;
            ColorMappingFromFour = null;
            ColorMappingToFour = null;
            ColorMappingColorFour = null;
            ColorMappingLabelFour = null;
            ColorMappingValueFour = null;
            ColorMappingFromFive = null;
            ColorMappingToFive = null;
            ColorMappingColorFive = null;
            ColorMappingLabelFive = null;
            ColorMappingValueFive = null;
            ColorMappingFromSix = null;
            ColorMappingToSix = null;
            ColorMappingColorSix = null;
            ColorMappingLabelSix = null;
            ColorMappingValueSix = null;
        }
    }

    public class ColorMappingDatasource
    {
        public string State;
        public double Inches;
        public string Value;
    }

    public List<ColorMappingDatasource> ColorMappingData = new List<ColorMappingDatasource>
{
        new ColorMappingDatasource {State= "Aceh", Inches= 31, Value= "High" },
        new ColorMappingDatasource {State= "Kalimantan Timur", Inches=1.15, Value= "Low" },
        new ColorMappingDatasource {State= "Jawa Barat", Inches=0.77, Value= "Low" },
        new ColorMappingDatasource {State= "Jawa Tengah", Inches=4.99, Value= "High" },
        new ColorMappingDatasource {State= "Bengkulu", Inches=1.93, Value= "Low" },
        new ColorMappingDatasource {State= "Banten", Inches=1.56, Value= "Low" },
        new ColorMappingDatasource {State= "Jakarta Raya", Inches=4.35, Value= "Moderate" },
        new ColorMappingDatasource {State= "Kalimantan Barat", Inches=4.01, Value= "High" },
        new ColorMappingDatasource {State= "Lampung", Inches=3.63, Value= "Moderate" },
        new ColorMappingDatasource {State= "Sumatera Selatan", Inches=4.16, Value= "High" },
        new ColorMappingDatasource {State= "Bangka-Belitung", Inches=5.94, Value= "High" },
        new ColorMappingDatasource {State= "Bali", Inches=1.75, Value= "Low" },
        new ColorMappingDatasource {State= "Jawa Timur", Inches=3.79, Value= "Moderate" },
        new ColorMappingDatasource {State= "Kalimantan Selatan", Inches=3.94, Value= "Moderate" },
        new ColorMappingDatasource {State= "Nusa Tenggara Timur", Inches=3.25, Value= "Moderate" },
        new ColorMappingDatasource {State= "Sulawesi Selatan", Inches=3.00, Value= "Moderate" },
        new ColorMappingDatasource {State= "Sulawesi Barat", Inches=4.61, Value= "High" },
        new ColorMappingDatasource {State= "Kepulauan Riau", Inches=5.22, Value= "High" },
        new ColorMappingDatasource {State= "Gorontalo", Inches=3.49, Value= "Moderate" },
        new ColorMappingDatasource {State= "Jambi", Inches=3.93, Value= "Moderate" },
        new ColorMappingDatasource {State= "Kalimantan Tengah", Inches=4.06, Value= "High" },
        new ColorMappingDatasource {State= "Irian Jaya Barat", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Sumatera Utara", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Riau", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Sulawesi Utara", Inches=51, Value= "Moderate" },
        new ColorMappingDatasource {State= "Maluku Utara", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Sumatera Barat", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Yogyakarta", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Maluku", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Nusa Tenggara Barat", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Sulawesi Tenggara", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Sulawesi Tengah", Inches=2.62, Value= "Moderate" },
        new ColorMappingDatasource {State= "Papua", Inches=2.62, Value= "Moderate" }
    };

}
