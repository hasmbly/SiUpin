@layout AnonymousLayout

@page "/informasi"

@inject HttpClient Http
@inject IMatToaster Toaster

@using SiUpin.Shared.Beritas.Queries.GetBeritas
@using SiUpin.Shared.Common.ApiEnvelopes

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner" style="min-height: 100px;">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-middle mat-layout-grid-cell-span-4">
            <MatH4><strong>Informasi seputar UPH</strong></MatH4>
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-right mat-layout-grid-cell-span-6">
            <MatIcon>
                <img src="images/informasi.png" />
            </MatIcon>
        </div>
    </div>
</div>

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-top mat-layout-grid-cell-span-2">
            <MatNavMenu>
                <MatTextField @bind-Value="@filterByName" HelperText="Filter: Nama Berita" Label="Cari Berita" Icon="@MatIconNames.Search"></MatTextField>
                <MatNavSubMenu>
                    <MatNavSubMenuHeader>
                        <MatNavItem AllowSelection="false">Regulasi</MatNavItem>
                    </MatNavSubMenuHeader>
                    <MatNavSubMenuList>
                        <MatNavItem OnClick="@OnClickUndangUndang" @ref="UndangUndangButton">Undang undang</MatNavItem>
                        <MatMenu @ref="UndangUndangMenu" style="z-index: 100;">
                            <MatList>
                                <MatListItem Target="_blank" Href="https://drive.google.com/file/d/1-kQfaCfAjhzQxW3Q2duLu33VoXrzuGSZ/view">
                                    UU No. 8 Tahun 1999 Perlindungan Konsumen
                                </MatListItem>
                                <MatListItem Target="_blank" Href="https://drive.google.com/file/d/18uaQW0nLxxv2WbmFzBiWWPNncD5qIpyG/view">
                                    UU No. 18 Tahun 2009 Peternakan dan Kesehatan Hewan
                                </MatListItem>
                                <MatListItem Target="_blank" Href="https://drive.google.com/file/d/1A_OXrNd9LteSIHeKpfZpNfPWvL4V4Ys-/view">
                                    UU No. 18 Tahun 2012 Pangan
                                </MatListItem>
                                <MatListItem Target="_blank" Href="https://drive.google.com/file/d/1U2YDveCIDF_wl-KG08nOixOxS43tGQdD/view">
                                    UU No. 20 Tahun 2008 UMKM
                                </MatListItem>
                                <MatListItem Target="_blank" Href="https://drive.google.com/file/d/1c9VwhzztlEnnCoNewxBCyvxrb_rkzWcK/view">
                                    UU No. 41 Tahun 2014 Peternakan dan Kesehatan Hewan (revisi UU No. 18 Tahun 2009)
                                </MatListItem>
                            </MatList>
                        </MatMenu>
                        <MatNavItem OnClick="@OnClickPeraturanPemerintah" @ref="PeraturanPemerintahButton">Peraturan Pemerintah</MatNavItem>
                        <MatMenu @ref="PeraturanPemerintahMenu" style="z-index: 100;">
                            <MatList>
                                <MatListItem Target="_blank" Href="https://drive.google.com/file/d/113_Gnjp52C1jeRMOkdDoOtg575j8_7Q1/view">
                                    PP No. 17 Tahun 2015 Ketahanan Pangan dan Gizi
                                </MatListItem>
                                <MatListItem Target="_blank" Href="https://drive.google.com/file/d/1nWOrTzLKtGEoapCEXvI6NYC0wlWUnL9w/view">
                                    PP No. 28 Tahun 2004 Keamanan, Mutu dan Gizi Pangan
                                </MatListItem>
                                <MatListItem Target="_blank" Href="https://drive.google.com/file/d/1GLRYQqx7IiZCKT9wFMgEC_VpB3RMXqqm/view">
                                    PP No. 69 Tahun 1999 Label dan Iklan Pangan
                                </MatListItem>
                            </MatList>
                        </MatMenu>
                        <MatNavItem Href="https://drive.google.com/file/d/1RyUgnPWmZJTEiYPc4Djl2sc-vcIPG_tD/view?usp=sharing" Target="_blank">Buku Kemitraan</MatNavItem>
                    </MatNavSubMenuList>
                </MatNavSubMenu>
            </MatNavMenu>
        </div>

        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-top mat-layout-grid-cell-span-10">
            <div class="mat-layout-grid-inner">

                @if (IsLoading)
                {
                    <MatDialog @bind-IsOpen="IsLoading" CanBeClosed="false">
                        <MatDialog>Please Wait..</MatDialog>
                        <MatDialogContent>
                            <MatProgressBar Indeterminate="true" Closed="!IsLoading"></MatProgressBar>
                        </MatDialogContent>
                    </MatDialog>
                }
                else
                {
                    if (items.Result != null)
                    {
                        foreach (var item in items.Result.Data)
                        {
                            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                                <MatCard>
                                    <MatCardContent>
                                        <MatCardMedia Wide="true" ImageUrl="@item.UrlOriginPhoto" Style="background-size: 100% 15vw; height: 10vw; object-fit: cover; "></MatCardMedia>
                                        <div class="has-mat-card-content">
                                            <MatHeadline6 class="has-mat-card-clean-margin">
                                                @item.Title
                                            </MatHeadline6>
                                        </div>
                                    </MatCardContent>
                                </MatCard>
                            </div>
                        }
                    }
                }
            </div>
        </div>

        <div class="mat-layout-grid-cell mat-layout-grid-cell-align-right mat-layout-grid-cell-span-12">
            <MatPaginator Length="totalCount" PageSize="pageSize" Page="OnPage"></MatPaginator>
        </div>
    </div>
</div>
@code
{
    private bool IsLoading = false;

    private ApiResponse<GetBeritasResponse> items;

    private int pageSize = Constants.Pagination.PageSize;
    private int pageIndex = 0;
    private int totalCount = 0;

    private string _filterByName = "";
    private string _filterJenisKomoditiID = null;

    MatNavItem UndangUndangButton;
    MatNavItem PeraturanPemerintahButton;

    BaseMatMenu PeraturanPemerintahMenu;
    BaseMatMenu UndangUndangMenu;

    public void OnClickUndangUndang(MouseEventArgs e)
    {
        this.UndangUndangMenu.OpenAsync(UndangUndangButton.Ref);
    }

    public void OnClickPeraturanPemerintah(MouseEventArgs e)
    {
        this.PeraturanPemerintahMenu.OpenAsync(PeraturanPemerintahButton.Ref);
    }

    public string filterByName
    {
        get => _filterByName;
        set
        {
            _filterByName = value;

            InvokeAsync(async () => { await GetPaginateData(pageSize, pageIndex + 1, _filterByName, _filterJenisKomoditiID); });

            this.StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync() => await GetPaginateData();

    private async Task OnPage(MatPaginatorPageEvent e)
    {
        pageSize = e.PageSize;
        pageIndex = e.PageIndex;

        await GetPaginateData(pageSize, pageIndex + 1, _filterByName, _filterJenisKomoditiID);
    }

    private async Task OnClickCategory(string filterJenisKomoditiID)
    {
        _filterJenisKomoditiID = filterJenisKomoditiID;

        await GetPaginateData(pageSize, pageIndex + 1, _filterByName, _filterJenisKomoditiID);
    }

    private async Task GetPaginateData(
        int pageSize = Constants.Pagination.PageSize,
        int pageNumber = Constants.Pagination.PageNumber,
        string filterName = null,
        string filterJenisKomoditiID = null)
    {
        IsLoading = true;

        var client = await Http.PostAsJsonAsync<GetBeritasRequest>(Constants.URI.Berita.Paginate, new GetBeritasRequest
        {
            PageSize = pageSize,
            PageNumber = pageNumber,
            FilterByName = filterName ?? ""
        });

        items = Task.FromResult(await client.Content.ReadFromJsonAsync<ApiResponse<GetBeritasResponse>>()).Result;

        if (items.Status.IsError)
        {
            Toaster.Add(items.Status.Message, MatToastType.Danger);

            IsLoading = false;

            StateHasChanged();
        }
        else
        {
            if (items.Result.Data.Count() > 0)
            {
                totalCount = items.Result.Pagination.TotalCount;

                IsLoading = false;

                StateHasChanged();
            }
        }
    }
}