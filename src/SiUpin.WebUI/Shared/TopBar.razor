@inject NavigationManager Navigation
@inject AuthenticationStateProvider _authenticationStateProvider

@using SiUpin.Shared.Modal.Auth

<MatAnchorUtils></MatAnchorUtils>
<MatAppBar Style="z-index: 100; background-color: #fcfcfc;" Class="mat-elevation-z3">
    @if (IsAdmin)
    {
        <MatAppBarRow>
            <MatAppBarSection>
                <MatIconButton Icon="menu" Style="color:black" OnClick="OnMenuClicked"></MatIconButton>
                <MatAppBarTitle>
                    <MatIcon @onclick='() => { Navigation.NavigateTo("/"); }'>
                        <img src="icon-nav.png" />
                    </MatIcon>
                </MatAppBarTitle>
            </MatAppBarSection>
            <MatAppBarSection Align="@MatAppBarSectionAlign.End">
                <MatHidden BreakPoint="@MatBreakpoint.XS" Direction="@MatHiddenDirection.Down">
                    <MatIconButton Style="color:black" OnClick="@OpenSmallMenu" @ref="SmallMenuButton">
                        <i class="fa fa-user-circle" aria-hidden="true"></i>
                    </MatIconButton>
                    <MatMenu @ref="SmallMenu" style="z-index: 100;">
                        <AuthorizeView>
                            <MatList>
                                <MatListItem>
                                    <MatIcon Icon="@MatIconNames.Verified_user"></MatIcon>&nbsp;&nbsp; @context.User.Identity.Name
                                </MatListItem>
                                <MatListItem OnClick="LogOut">
                                    <MatIcon Icon="@MatIconNames.Directions_run"></MatIcon>&nbsp;&nbsp; Log Out
                                </MatListItem>
                            </MatList>
                        </AuthorizeView>
                    </MatMenu>
                </MatHidden>
                <MatHidden BreakPoint="@MatBreakpoint.SM" Direction="@MatHiddenDirection.Up">
                    <MatIconButton Style="color:black" Icon="more_vert" OnClick="@OpenSmallMenu" @ref="SmallMenuButton"></MatIconButton>
                    <MatMenu @ref="SmallMenu" style="z-index: 100;">
                        <AuthorizeView>
                            <MatList>
                                <MatListItem>
                                    <MatIcon Icon="@MatIconNames.Verified_user"></MatIcon>&nbsp;&nbsp; <a href="authentication/profile" class="mat-button">@context.User.Identity.Name</a>
                                </MatListItem>
                                <MatListItem OnClick="LogOut">
                                    <MatIcon Icon="@MatIconNames.Directions_run"></MatIcon>&nbsp;&nbsp; Log Out
                                </MatListItem>
                            </MatList>
                        </AuthorizeView>
                    </MatMenu>
                </MatHidden>
            </MatAppBarSection>
        </MatAppBarRow>
    }
    else
    {
        <MatAppBarRow Class="app-header-wrapper" Style="height: auto;">
            <MatAppBarSection>
                <MatAppBarTitle>
                    <MatIcon @onclick='() => { Navigation.NavigateTo("/"); }'>
                        <img src="icon-nav.png" />
                    </MatIcon>
                </MatAppBarTitle>
            </MatAppBarSection>
            <MatAppBarSection>
                <MatHidden BreakPoint="@MatBreakpoint.XS" Direction="@MatHiddenDirection.Down">
                    <MatButton Link="/" Icon="home"></MatButton>
                    <MatButton Link="/uph">UPH</MatButton>&nbsp;
                    <MatButton Link="/cluster">Cluster</MatButton>&nbsp;
                    <MatButton Link="/katalog">Katalog</MatButton>&nbsp;
                    <MatButton Link="/informasi">Informasi</MatButton>
                </MatHidden>
            </MatAppBarSection>

            <MatAppBarSection Align="@MatAppBarSectionAlign.End">
                <MatHidden BreakPoint="@MatBreakpoint.XS" Direction="@MatHiddenDirection.Down">
                    <AuthorizeView>
                        <Authorized>
                            <MatButton Link="/admin" Raised="true" Icon="@MatIconNames.Vpn_key">Admin</MatButton>
                        </Authorized>
                        <NotAuthorized>
                            <MatButton OnClick="() => { OpenDialog = true; }" Raised="true" Icon="@MatIconNames.Vpn_key">Log In</MatButton>
                            <Login DialogIsOpen="OpenDialog" DialogIsOpenStatus="DialogIsOpenStatus" />
                        </NotAuthorized>
                    </AuthorizeView>
                </MatHidden>
                <MatHidden BreakPoint="@MatBreakpoint.SM" Direction="@MatHiddenDirection.Up">
                    <MatIconButton Style="color:black" Icon="more_vert" OnClick="@OpenSmallMenu" @ref="SmallMenuButton"></MatIconButton>
                    <MatMenu @ref="SmallMenu" style="z-index: 100;">
                        <MatList>
                            <MatListItem>
                                <MatButton Link="/" Icon="home">Home</MatButton>
                            </MatListItem>
                            <MatListItem>
                                <MatButton Link="/uph" Icon="store_mall_directory">UPH</MatButton>
                            </MatListItem>
                            <MatListItem>
                                <MatButton Link="/cluster" Icon="category">Cluster</MatButton>
                            </MatListItem>
                            <MatListItem>
                                <MatButton Link="/katalog" Icon="store">Katalog</MatButton>
                            </MatListItem>
                            <MatListItem>
                                <MatButton Link="/informasi" Icon="file_copy">Informasi</MatButton>
                            </MatListItem>
                            <MatListItem>
                                <MatButton OnClick="() => { OpenDialog = true; }" Raised="true" Icon="@MatIconNames.Vpn_key">Log In</MatButton>
                                <Login DialogIsOpen="OpenDialog" DialogIsOpenStatus="DialogIsOpenStatus" />
                            </MatListItem>
                        </MatList>
                    </MatMenu>
                </MatHidden>
            </MatAppBarSection>
        </MatAppBarRow>
    }
</MatAppBar>

@code
{
    [Parameter]
    public EventCallback IsMenuClicked { get; set; }

    [Parameter]
    public bool IsAdmin { get; set; }

    private BaseMatMenu SmallMenu { get; set; }

    private BaseMatIconButton SmallMenuButton { get; set; }

    private void OnMenuClicked() => IsMenuClicked.InvokeAsync(null);

    public bool OpenDialog { get; set; }

    private void DialogIsOpenStatus(bool status) => OpenDialog = status;

    //private async Task BeginSignOut(MouseEventArgs args)
    //{
    //    //await SignOutManager.SetSignOutState();
    //    Navigation.NavigateTo("authentication/logout");
    //}

    public void OpenSmallMenu(MouseEventArgs e)
    {
        _ = this.SmallMenu.OpenAsync(SmallMenuButton.Ref);
    }

    private async Task LogOut()
    {
        await ((ServerAuthenticationStateProvider)_authenticationStateProvider).MarkUserAsLoggedOutAsync();

        Navigation.NavigateTo("/");
    }
}